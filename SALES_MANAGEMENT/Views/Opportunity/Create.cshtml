@model SALES_MANAGEMENT.Models.OpportunityModel

<head>
    <style>
        h1 {
            text-align: center;
        }
        body {
            background-color: lavender;
        }
    </style>
</head>

<h2 style="font-family:'Times New Roman';"> @Html.ViewData["Message"] </h2>

    @using (Html.BeginForm("Create", "Opportunity"))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h1 style="font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;"> OPPORTUNITY </h1>
    <div>
        <button>  @Html.ActionLink("Qualified Leads", "IndexOpportunity") </button>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.RefOppId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RefOppId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RefOppId, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PurchaseTimeForm, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PurchaseTimeForm, new SelectList(Model.PurchaseTimeFormList, "PT_Id", "PurchaseTimeForm_Name"), "Select PurchaseTimeForm", new { @class = "form-control " })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Currency, new SelectList(Model.CurrencyList, "Currency_Id", "Currency_Name"), "Select Currency", new { @class = "form-control " })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BudgetAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BudgetAmount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BudgetAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PurchesProcess, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PurchesProcess, new SelectList(Model.PurchesProcessList, "PurchesProcess_Id", "PurchesProcess_Name"), "Select PurchesProcess", new { @class = "form-control " })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ForecastCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ForecastCategory, new SelectList(Model.ForecastCategoryList, "ForecastCategory_Id", "ForecastCategory_Name"), "Select ForecastCategory", new { @class = "form-control " })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentSuitation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentSuitation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CurrentSuitation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustommerNeed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CustommerNeed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CustommerNeed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProposedSolution, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProposedSolution, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProposedSolution, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create Opportunity" class="btn btn-default" />
        </div>
    </div>
</div>
    }
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
